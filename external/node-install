#! /bin/sh
set -eu
PROJECTS=$(git submodule foreach --quiet '[ -f package.json ] && basename $(pwd) || true')

_clean_up() {
    >&2 echo "[INFO] Resetting modified package.json"
    # replace the modified package.json with the original
    git submodule foreach --quiet '[ -f "package.json.bak" ] && mv package.json.bak package.json || true'
    # This ensures that meta repo sees no changes made
    # Currently a little dirty hack
    >&2 echo "[INFO] Cleaning git tree"
    git submodule foreach --quiet 'git status 2>/dev/null 1>/dev/null'
}

# Make sure we always clean up after ourselves
trap '_clean_up' EXIT


if [ -z "$(which lerna 2>/dev/null)" ];then
  >&2 echo "[ERROR] $(basename "$0") requires lerna to be installed"
fi
>&2 echo "[INFO] Cleaning old node modules"
rm -rf node_modules
git submodule foreach --quiet 'rm -rf node_modules'

>&2 echo "[INFO] Linking Projects locally"
# Create a backup file
git submodule foreach --quiet '[ -f "package.json" ] && cp package.json package.json.bak || true'
# Modifing the package json
for project in ${PROJECTS}; do
    >&2 echo "> Checking ${project} package.json"
    for replace in ${PROJECTS};do
        if [ ${project} = ${replace} ];then
          continue
        fi
        # Damned Mac OS uses a different version of sed instead of the GNU flavor
        # So it always has to write a 'backup file'
        sed -i'' -e 's/git+.*'"${replace}"'\.git.*\"/file:..\/'"${replace}"\"'/g' "${project}/package.json"
    done
    cat "${project}/package.json"
done

>&2 echo "[INFO] Running npm install"
npm install

>&2 echo "[INFO] Bootstraping any lerna projects"
git submodule foreach --quiet '[ -f "lerna.json" ] && lerna bootstrap || true'
